#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass scrbook
\use_default_options true
\maintain_unincluded_children false
\language german-ch
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Yet Another Encrypted Messenger
\end_layout

\begin_layout Author
Florian Amstutz <
\begin_inset CommandInset href
LatexCommand href
target "florian@amstutz.nu"
type "mailto:"

\end_inset

>
\end_layout

\begin_layout Date
14.
 Mai 2012
\end_layout

\begin_layout Publishers
Semesterarbeit an der Zürcher Hochschule für Angewandte Wissenschaften
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Chapter
Einführung
\end_layout

\begin_layout Standard
Als einführendes Kapitel dieses Dokuments wird die Semesterarbeit als Projekt
 kurz vorgestellt und es werden die Rahmenbedingungen der Semesterarbeit
 zusammengefasst niedergeschrieben.
 Weiter werden verschiedene Softwareentwicklungsprozesse vorgestellt sowie
 die für diese Semesterarbeit verwendete Methode erklärt.
 Am Ende dieses Kapitels wird unter Benutzung der vorgestellten Softwareentwickl
ungsmethode eine Projektplanung erstellt und die wichtigsten Meilensteine
 definiert.
\end_layout

\begin_layout Section
Management Summary
\end_layout

\begin_layout Standard
Mit dem zunehmenden Aufkommen von Attacken und gezieltem Abhorchen von Echtzeitk
ommunikation via E-Mail oder Instant Messaging steigt der Bedarf an eine
 sichere und einfache Übertragungsart von Nachrichten oder Daten.
 
\end_layout

\begin_layout Standard
Als Nutzer eines Kommunikationskanals über das öffentliche Internet will
 ich die Möglichkeit haben meine privaten Daten verschlüsselt und sicher
 an einen oder mehrere Empfänger übertragen zu können.
 Ich will dabei eine einfach zu bedienende Applikation zur Verfügung haben
 um meine geheimen Daten übertragen zu können und so potentiellen Mithörern
 keine Klartextinformationen zur Verfügung zu stellen.
 
\end_layout

\begin_layout Standard
Diese Applikation soll als Prototyp im Rahmen der Semesterarbeit im dritten
 Studienjahr an der ZHAW entwickelt werden.
 Dabei wird der Schwerpunkt der Arbeit auf der methodischen Vorgehensweise
 der Softwareentwicklung und weniger auf der Implementierung der kryptografische
n Algorithmen.
\end_layout

\begin_layout Section
Über die Semesterarbeit
\end_layout

\begin_layout Standard
Gemäss Reglement der ZHAW (siehe 
\begin_inset CommandInset citation
LatexCommand cite
key "Stern2010"

\end_inset

) dient die Semesterarbeit als Vorbereitung zur Bachelorarbeit.
 Sie besteht aus einem konzeptionellen Teil und einem Umsetzungsteil, wobei
 der Schwerpunkt auf der Umsetzung liegen soll.
\end_layout

\begin_layout Standard
Der Aufwand für die Fertigstellung der Semestarbeit beträgt mindestens 120
 Stunden und schliesst mit einer Präsentation vor dem Betreuer und einer
 Vertretung der Leitung des Studengangs Informatik ab.
\end_layout

\begin_layout Section
Softwareentwicklungsprozess
\end_layout

\begin_layout Standard
Software lässt sich nach einer Vielzahl von Prozessen und Modellen entwickeln.
 Von iterativen Vorgehen wie Scrum über komplexe Modelle wie RUP 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "RUP"
description "Der Rational Unified Process ist ein kommerzielles Vorgehensmodell zur Softwareentwicklung von IBM. "

\end_inset

 hin zu klassischen, linearen Vorgehen wie dem Wasserfallmodell oder dem
 V-Modell
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "V-Modell"
description "Das V-Modell ist ein Vorgehensmodell in der Softwareentwicklung, bei dem der Softwareentwicklungsprozess in Phasen organisiert wird. Neben diesen Entwicklungsphasen definiert das V-Modell auch das Vorgehen zur Qualitätssicherung (Testen) phasenweise."

\end_inset

.
 Nach 
\begin_inset CommandInset citation
LatexCommand cite
key "Starke2011"

\end_inset

 ist die Auswahl des Entwicklungsprozesses eine der schwierigsten Entscheidungen
, die man bei einem Softwareprojekt treffen muss.
 Häufig besitzen Unternehmungen bereits etablierte, auf sie zugeschnittene
 Entwicklungsmodelle, die mehr oder weniger gut zur Organisation der Unternehmun
g passen.
 Ein ungünstig gewählter oder nicht vollständig eingeführter und gelebter
 Entwicklungsprozess ist nach 
\begin_inset CommandInset citation
LatexCommand cite
key "Starke2011"

\end_inset

 einer der Hauptgründe wieso Softwareprojekte mit Qualitätsmängeln, Budgetübersc
hreitungen oder zeitlichen Verzögerungen zu kämpfen haben.
\end_layout

\begin_layout Standard
Für dieses Projekt wurde das Wasserfallmodell als Entwicklungsprozess ausgewählt.
 Das Wasserfallmodell teilt die Softwareentwicklung in meist fünf verschiedene
 Phasen auf.
 Dabei kann erst mit der nächsten Phase begonnen werde wenn die Lieferegebnisse
 und die Ergebnisdokumentation der vorhergehenden Phase fertiggestellt und
 abgenommen worden sind.
 Das Wasserfallmodell wurde ausgewählt, da die jeweiligen Phasen eindeutig
 abgeschlossen werden können, da der Betreuer als einziger, externer Stakeholder
 des Projekts zu festdefinierten Phasen Einfluss auf das Projekt ausübt
 und danach keine Möglichkeit mehr besitzt, den Projektverlauf zu beeinflussen.
 Die grössten Nachteile des Wasserfallmodells sind nach 
\begin_inset CommandInset citation
LatexCommand cite
key "Elmer2005"

\end_inset

 ein Abgrenzugsproblem zwischen den Phasen sowie die Schwierigkeit des Abschluss
es einzelner Phasen.
 Dadurch dass der Betreuer nur in den Phasen Requirements und Design Einfluss
 auf das Projekt nehmen kann und Student als einziger Stakeholder den Abschluss
 der Phasen abnimmt sowie den Ablauf der Phasen innerhalb des Projekts steuert
 können diese Nachteile umgangen werden.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Graphics/sw-process.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Wasserfallprozess nach 
\begin_inset CommandInset citation
LatexCommand cite
key "Hung2007"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Zu Beginn des Wasserfallmodells steht das Sammeln und Dokumentieren der
 Anforderungen (Requirements).
 Wenn die Anforderungen umfänglich und in hohem Detaillierungsgrad niedergeschri
eben sind, werden diese vom Auftraggeber abgenommen und das Projekt geht
 in die Design-Phase über.
 Die zu entwickelnde Software wird auf verschiedenen Ebenen von Softwarearchitek
ten designed und eine Blaupause wird erstellt, nach welcher sich die Software
 Entwickler in der Implementationsphase zu halten haben.
 Das Design sollte einen Plan beinhalten, welcher die Implementierung der
 Anforderungen aufzeigt.
 Wenn das Design fertiggestellt worden ist, wird dieses von den Entwicklern
 in Programmcode umgesetzt.
 Gegen Ende der Implementationsphase werden die Softwarekomponenten verschiedene
r Teams integriert.
 Nachdem die Implementierungs- und Integrationsphasen abgeschlossen sind,
 wird das Softwareprodukt getestet und allfällige Fehler aus früheren Phasen
 werden zu diesem Zeitpunkt entfernt.
 Danach wird das Softwareprodukt installiert und später in der Wartungsphase
 (Maintenance) um weitere Funktionalitäten erweitert beziehungsweise werden
 weitere Bugs
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Bug"
description "Ein Programm- oder Softwarefehler wird als Bug bezeichnet und beschreibt im Allgemeinen ein fehlerhaftes Verhalten von Computerprogrammen."

\end_inset

 behoben.
\end_layout

\begin_layout Standard
Die Struktur dieses Dokuments hält sich auch an den Wasserfallprozess nach
 
\begin_inset CommandInset citation
LatexCommand cite
key "Hung2007"

\end_inset

 (siehe Tabelle 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Zuweisungstablle-der-Phasen"

\end_inset

).
 Die Phase Maintenance wird dabei ausgelassen, da sich die innerhalb des
 Projekts entwickelte Applikation nach Abschluss der Verifizierungsphase
 noch im Protoypenstand befinden wird.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="3">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Phase
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kapitelüberschrift
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Seite
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Requirements
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset CommandInset ref
LatexCommand nameref
reference "chap:Anforderungen"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset CommandInset ref
LatexCommand pageref
reference "chap:Anforderungen"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Design
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset CommandInset ref
LatexCommand nameref
reference "chap:Konzept"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset CommandInset ref
LatexCommand pageref
reference "chap:Konzept"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Implementation
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset CommandInset ref
LatexCommand nameref
reference "chap:Implementierung"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset CommandInset ref
LatexCommand pageref
reference "chap:Implementierung"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Verification
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset CommandInset ref
LatexCommand nameref
reference "chap:Test"

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset CommandInset ref
LatexCommand pageref
reference "chap:Test"

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Zuweisungstabelle der Phasen zu Kapiteln in diesem Dokument
\begin_inset CommandInset label
LatexCommand label
name "tab:Zuweisungstablle-der-Phasen"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Projektplanung
\end_layout

\begin_layout Standard
Nach Reglement der ZHAW (siehe 
\begin_inset CommandInset citation
LatexCommand cite
key "Stern2010"

\end_inset

) muss die Semesterarbeit sechs Monate nach Freigabe beendet sein.
 Um die Planbarkeit der Semesterarbeit zu erhöhen wurde das Projekt vorgängig
 in einzelne Phasen unterteilt, welche auf die bekannten Meilensteine enden.
\end_layout

\begin_layout Standard
Die Projektplanung dient dazu möglichst frühzeitig im Verlauf der Seminararbeit
 schon Teile der Dokumentation fertiggestellt zu haben, so dass nicht in
 den letzten zwei Wochen vor der Abgabe der Arbeit übermässig viel Zeit
 und Aufwand in die Arbeit investiert werden muss.
 Ausserdem sinkt das Risiko, das nicht alle erwarteten Resultate der Arbeit
 geliefert werden können, da die Lieferergebnisse bei Phasenende schon in
 genügend hoher Qualität vorliegen, dass diese abgegeben werden können.
\end_layout

\begin_layout Subsection
Phasenplanung
\end_layout

\begin_layout Standard
Nach dem Wasserfallmodell wird das Projekt in einzelne Phasen eingeteilt,
 die zu einem bestimmten Zeitpunkt mit vordefinierten Endergebnissenen enden.
 Bei Erreichen des Endzeitpunkts und bei Lieferung aller Endergebnisse geht
 das Projekt in die nächste Phase über.
 Die Phasen in diesem Projekt wurden häufig so modelliert, dass ihr Endzeitpunkt
 mit dem Erreichen eines Meilensteins zusammenliegt.
 Das heisst, das bei Erreichen des Meilensteins die vorhergehende Phase
 zwingend abgeschlossen sein werden muss.
\end_layout

\begin_layout Standard
Vor dem eigentlichen Projektstart werden geeigeneten Themen für die Semesterarbe
it evaluiert, ein Betreuer gesucht sowie ein Projektantrag in EBS erfasst.
 Diese Phase endet im Kick-Off-Meeting zwischen Betreuer und Student und
 der formalen Freigabe der Semesterarbeit durch die Studiengangsleitung.
 Das Erheben und Dokumentieren der Anforderungen ist die erste Phase der
 eigentlichen Projektumsetzung und mündet in der Konzepterarbeitung auf
 Basis der Anforderungen.
 Ist das Konzept vollständig abgeschlossen findet das Design-Review statt,
 bei welchem der Betreuer das Konzept begutachtet und allfällige Anpassungen
 am Konzept vorschlägt.
 Nach Fertigstellung des Konzepts folgt die Implementierungsphase und Testphase,
 nach denen die Arbeit abgegeben werden muss.
 Als letzte Phase folgt das Erarbeiten der Präsentation, die bei Phasenende
 vorgetragen wird.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="5">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Phase
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Von
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bis
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ergebnis
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Endet in Meilenstein
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Themenevaluierung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
15.10.2011
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
04.11.2011
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Antrag in EBS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
M1, M2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Erfassen der Anforderungen
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
04.11.2011
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
01.12.2011
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dokumentierte Anforderungen
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Erarbeiten des Konzepts
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
01.12.2011
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
13.04.2012
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Umfassendes Konzept
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
M3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Implementierungs des Konzepts
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
13.04.2012
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
01.05.2012
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Implementierung
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Überprüfen und Test des Konzepts
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
01.05.2012
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
23.05.2012
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Erfüllte Integrationstests
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
M4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Erarbeiten der Präsentation
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
23.05.2012
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
06.06.2012
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Fertiggestellte Präsentation
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
M5
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Phasenplan
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Meilensteine
\end_layout

\begin_layout Standard
Ein Meilenstein ist ein Ereignis von besonderer Bedeutung und stellt ein
 (Zwischen-) Ziel innerhalb eines Projekts dar.
 Meilensteine werden typischerweise von Personen oder Organisationen ausserhalb
 des Projekts vorgegeben und passen mit den im vorhergehenden Kapitel definierte
n Phasen überein.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="3">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kürzel
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Meilenstein
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Datum
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
M1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kick-Off 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
04.11.2011
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
M2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Freigabe der Arbeit
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
06.11.2012
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
M3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Design Review
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
13.04.2012
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
M4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Abgabe der Arbeit
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
23.05.2012
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
M5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Präsentation der Semesterarbeit
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
06.06.2012
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Meilensteine
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Anforderungen
\begin_inset CommandInset label
LatexCommand label
name "chap:Anforderungen"

\end_inset


\end_layout

\begin_layout Standard
Gemäss dem verwendeten Wasserfallmodell werden als erstes die Anforderungen
 erhoben.
 Dazu wird der Begriff 
\begin_inset Quotes eld
\end_inset

Anforderung
\begin_inset Quotes erd
\end_inset

 definiert und auf verschiedene Arten von Anforderungen eingegangen.
 Anschliessend wird der Systemkontext aufgezeigt sowie die konkreten Anforderung
en an YAEM als Use-Cases modelliert und spezifiziert.
 Der Abschluss dieses Kapitels wie auch der Anforderungsphase bildet die
 Erstellung und Erklärung der für den Benutzer sichtbaren Dialogfenster.
\end_layout

\begin_layout Section
Was sind Anforderungen?
\end_layout

\begin_layout Standard
Die erste Phase des Wasserfallmodells beschäftigt sich mit den Anforderungen
 an das zu entwickelnde Softwareprodukt.
 Damit das Entwicklungsprodukt zum Erfolg geführt werden kann, muss zunächst
 bekannt sein, was die Anforderungen an das System sind und diese müssen
 geeignet dokumentiert sein.
 Nach 
\begin_inset CommandInset citation
LatexCommand cite
key "IEEE610.121990"

\end_inset

 wird eine Anforderung wie folgt definiert:
\end_layout

\begin_layout Description
Anforderung Eine Anforderung ist:
\end_layout

\begin_deeper
\begin_layout Enumerate
Eine Bedingung oder Fähigkeit, die von einem Benutzer (Person oder System)
 zur Lösung eines Problems zur Erreichung eines Ziels benötigt wird.
\end_layout

\begin_layout Enumerate
Eine Bedingung oder Fähigkeit, die ein System oder Teilsystem erfüllen oder
 besitzen muss, um einen Vertrag, eine Norm, eine Spezifikation oder andere,
 formell vorgegebene Dokumente zu erfüllen.
\end_layout

\begin_layout Enumerate
Eine dokumentierte Repräsentation einer Bedingung oder Eigenschaft gemäss
 1.
 oder 2.
\end_layout

\end_deeper
\begin_layout Standard
Die Anforderungen an das im Rahmen der Semesterarbeits zu entwickelnden
 Systems werden in Use-Case-Diagrammen modellhaft dargestellt und als Use-Case-S
pezifikationen ausformuliert.
 Auf eine natürlichsprachige Dokumentation der Anforderungen wird verzichtet,
 da die Anforderungen aufgrund der Use-Case-Diagrammen verständlich genug
 sind und alle zusätzlich zu den Diagrammen zu beachtenden Punkte in den
 Use-Case-Spezifikationen enthalten sind.
 
\end_layout

\begin_layout Subsection
Arten von Anforderungen
\begin_inset CommandInset label
LatexCommand label
name "sub:Arten-von-Anforderungen"

\end_inset


\end_layout

\begin_layout Standard
Nach 
\begin_inset CommandInset citation
LatexCommand cite
key "Pohl2011"

\end_inset

 unterscheidet man im Allgemeinen zwischen drei Arten von Anforderungen:
\end_layout

\begin_layout Itemize
Funktionale Anforderungen legen die Funktionalität fest, die das geplante
 System zur Verfügung stellen soll.
 Sie werden typischerweise in Funktions-, Verhaltens- und Strukturanforderungen
 unterteilt.
\end_layout

\begin_layout Itemize
Qualitätsanforderungen legen gewünschte Qualitäten des zu entwickelnden
 Systems fest und beeinflussen häufig, in grösserem Umfang als die funktionalen
 Anforderungen, die Gestalt der Systemarchitektur.
 Typischerweise beziehen sich Qualitätsanforderungen auf die Performance,
 die Verfügbarkeit, die Zuverlässigkeit, die Skalierbarkeit oder die Portabilitä
t des betrachteten Systems.
 Anforderungen dieses Typs werden häufig auch der Klasse 
\begin_inset Quotes eld
\end_inset

nicht funktionaler Anforderungen
\begin_inset Quotes erd
\end_inset

 zugeordnet.
\end_layout

\begin_layout Itemize
Randbedingungen (auch: Rahmenbedingungen) können von den Projektbeteiligten
 nicht beeinflusst werden.
 Randbedingungen können sich sowohl auf das betrachtete System beziehen
 (z.B.
 
\begin_inset Quotes eld
\end_inset

Das System soll über Webservices mit Aussensysteme kommunizieren
\begin_inset Quotes erd
\end_inset

) als auch auf den Entwicklungsprozess des Systems (z.B.
 
\begin_inset Quotes eld
\end_inset

Das Sysemt soll bis spätestens Mitte 2013 am Markt verfügbar sein
\begin_inset Quotes erd
\end_inset

).
 Randbedingungen werden, im Gegensatz zu funktionalen Anforderungen und
 Qualitätsanforderungen, nicht umgesetzt, sondern schränken die Umsetzungsmöglic
hkeiten, d.h.
 den Lösungsraum im Entwicklungsprozess ein.
\end_layout

\begin_layout Section
Systemkontext
\end_layout

\begin_layout Standard
Als erster Schritt in der Erhebung und Dokumentierung wird der Systemkontext
 ermittelt.
 Es wird eine Sollperspektive eingenommen, d.h., es wird eine Annahme getroffe,
 wie das geplante System sich in die Realität integriert.
 Hierdurch wird der Realitätsausschnitt identifiziert, der das System und
 damit potenziell auch dessen Anforderungen beeinflusst.
 Um die Anforderungen an das geplante System korrekt und vollständig spezifizier
en zu können, ist es notwendig, die Beziehung zwischen den einzelnen materiellen
 und immateriellen Aspekten im Systekontext und dem geplanten System exakt
 zu dfinieren.
 Der für die Anforderungen des Systems relevante Ausschnitt der Realität
 wird als Systemkontext bezeichnet.
\end_layout

\begin_layout Standard
Der Ursprung der Anforderungen des Systems liegt im Systemkontext des geplanten
 Systems.
 Aus diesem Grund wird der Systemkontext vor Erhebung und Dokumentierung
 der Anforderungen festgelegt.
 Der Systemkontext YAEM wird wie folgt dargestellt.
 Die Benutzer als Stakeholder an das System senden und empfangen Nachrichten
 und befinden sich innerhalb des Systemkontexts da sie direkt mit dem System
 interagieren.
 Die Verschlüsselungsalgorithmen sind in der Fachliteratur klar geregelt
 und normiert und geben aus diesem Grund die konkreten Implementierungsvorschrif
ten an das System vor.
\end_layout

\begin_layout Subsection*
Systemkontext YAEM
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ExportedDiagrams/Systemkontext.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Systemkontext
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Use-Case-Spezifikationen
\end_layout

\begin_layout Standard
Nach 
\begin_inset CommandInset citation
LatexCommand cite
key "Pohl2011"

\end_inset

 zeigen Use-Case-Diagamme die aus einer externen Nutzungssicht wesentlichen
 Funktionalitäten des betrachteten Systems sowie spezifische Beziehungen
 der einzelnen Funktionalitäten untereinander bzw.
 zu Aspekten in der Umgebung des Systems.
 Abgesehen vom Namen eines Use-Cases und dessen Beziehungen dokumentieren
 Use-Case-Diagramme allerdings keinerlei weitere Informationen über die
 einzelnen Use-Cases, wie z.B.
 die Systematik der Interaktion eines Use Case
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Use Case"
description "Ein Use Case (deutsch Anwendungsfall) bündelt alle möglichen Szenarien, die eintreten können, wenn ein Akteur versucht, mit Hilfe des betrachteten Systems ein bestimmtes fachliches Ziel zu erreichen. Er beschreibt, was inhaltlich beim Versuch der Zielerreichung passieren kann, und abstrahiert von konkreten technischen Lösungen. Das Ergebnis des Anwendungsfalls kann ein Erfolg oder Fehlschlag/Abbruch sein."

\end_inset

 mit Akteuren in der Umgebung.
 Diese Informationen werden unter Verwendung einer geeigneten Schablone
 zusätzlich zum Use-Case-Diagramm textuell dokumentiert.
\end_layout

\begin_layout Standard
Alle funktionalen Anforderungen (siehe 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Arten-von-Anforderungen"

\end_inset

) werden nun als Use-Cases modelliert und spezifiziert
\begin_inset Foot
status open

\begin_layout Plain Layout
Die verwendete Schablone für die Use-Case-Spezifikationen stammt aus 
\begin_inset CommandInset citation
LatexCommand cite
key "Pohl2011"

\end_inset

 und dient zur zweckmässigen Strukturierung von Typen von Informationen,
 die einen Use-Case betreffen.
 Die Abschnitte Autor, Quelle, Verantwortlicher und Qualität werden ausgelassen,
 da sie für die Semesterarbeit keine Relevant besitzen.
\end_layout

\end_inset

.
 Als Quellen der Anforderungen dienten der Betreuer, die Reglemente der
 ZHAW betreffend der Semesterarbeit sowie der Student in der Rolle als Benutzer
 des Systems.
 Zusätzlich zu den Use-Cases und der dazugehörigen Use-Case-Spezifikation
 wird vorgängig in Prosatext der Anwendungsfall beschrieben.
 Aus Gründen der Übersichtlichkeit und des überschaubaren Umfangs dienen
 diese Use-Cases primär als Anforderungen an das zu entwickelnde Softwaresystem.
 Jedes Use-Case wird im Rahmen der Verifizerungsphase (siehe 
\begin_inset CommandInset ref
LatexCommand vref
reference "chap:Test"

\end_inset

) als Integrationstest einzeln getestet.
\end_layout

\begin_layout Subsection
Gespräch beitreten
\end_layout

\begin_layout Standard
Ein Benutzer möchte Nachrichten über YAEM versenden und startet die Applikation.
 Er wählt einen Benutzernamen, stellt eine Verbindung zum Server her und
 nimmt am Gespräch teil.
 Er kann nun anderen Teilnehmern des Gesprächs Nachrichten versenden.
\end_layout

\begin_layout Subsubsection*
Use-Case
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ExportedDiagrams/UC1-GespraechBeitreten.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Use-Case Gepräch beitreten
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Use-Case-Spezifikation
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="14" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="10cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Abschnitt
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Inhalt
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bezeichner
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
UC1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Name
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gespräch beitreten
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Priorität
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Wichtigkeit für Systemerfolg: hoch
\begin_inset Newline newline
\end_inset

Technologisches Risiko: niedrig
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kritikalität
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Hoch
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Beschreibung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer tritt einem Gespräch bei.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Auslösendes Ereignis
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Benutzer möchte einem Gespräch beitreten.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Akteure
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Benutzer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer ist nicht schon einem Gespräch beigetreten.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer kann Nachrichten versenden und Nachrichten anderer Gesprächsteilneh
mer empfangen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ergebnis
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Session-Ticket wird erstellt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Hauptszenario
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Der Benutzer wählt einen Benutzernamen.
\end_layout

\begin_layout Plain Layout
2.
 Der Benutzer stellt eine Verbindung zum Server her.
\end_layout

\begin_layout Plain Layout
3.
 Der Server erstellt eine Session-Ticket für den Benutzer und gibt ihm dieses
 zurück.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alternativszenarien
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2a.
 Der gewählte Benutzername ist bereits im Gespräch vorhanden.
\end_layout

\begin_layout Plain Layout
2a1.
 Der Benutzer wird aufgefordert einen anderen Benutzernamen auszuwählen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ausnahmeszenarien
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Auslösendes Ereignis: Der Benutzer kann keine Verbindung zum Server herstellen.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Use-Case-Spezifikation Gespräch beitreten
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Gespräch verlassen
\end_layout

\begin_layout Standard
Der Benutzer ist im Gespräch und möchte dieses Verlassen.
 Er schliesst die Applikation und meldet sich am Server vom Gespräch ab.
 Andere Teilnehmer des Gesprächs können ihm nun keine Nachrichten mehr senden.
\end_layout

\begin_layout Subsubsection*
Use-Case
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ExportedDiagrams/UC2-GespraechVerlassen.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Use-Case Gespräch verlassen
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Use-Case-Spezifikation
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="14" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="10cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Abschnitt
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Inhalt
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bezeichner
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
UC2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Name
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gespräch verlassen
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Priorität
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Wichtigkeit für Systemerfolg: hoch
\begin_inset Newline newline
\end_inset

Technologisches Risiko: niedrig
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kritikalität
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Hoch
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Beschreibung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer verlässt ein Gespräch.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Auslösendes Ereignis
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Benutzer möchte eine Gespräch verlassen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Akteure
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Benutzer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer ist einem Gespräch beigetreten.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer kann erneut einem Gespräch beitreten.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ergebnis
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Session-Ticket ist abgelaufen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Hauptszenario
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Der Benutzer verlässt das Gespräch.
\end_layout

\begin_layout Plain Layout
2.
 Der Server erklärt das Session-Ticket des Benutzers für abgelaufen und
 sendet das aktualisierte Ticket dem Benutzer zu.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alternativszenarien
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Keine
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ausnahmeszenarien
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Keine
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Use-Case-Spezifikation Gespräch verlassen
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Nachricht senden
\end_layout

\begin_layout Standard
Dies ist der wichtigste und meistgenutzte Anwendungsfall des Systems.
 Der Benutzer als Sender möchte einem oder mehreren Teilnehmern des Gesprächs
 (Empfänger) eine Nachricht senden.
 Er kann dabei wählen, ob er diese verschlüsselt oder unverschlüsselt versenden
 möchte.
 Sendet der Benutzer die Nachricht verschlüsselt, so werden zuerst der Initialis
ierungsvektor festgelegt sowie der Schlüssel gewählt.
 Danach wird die Nachricht an den oder die Empfänger übermittelt und startet
 den Anwendungsfall 
\begin_inset Quotes eld
\end_inset

Nachricht empfangen
\begin_inset Quotes erd
\end_inset

 (siehe 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Nachricht-empfangen"

\end_inset

).
\end_layout

\begin_layout Subsubsection*
Use-Case
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ExportedDiagrams/UC3-NachrichtSenden.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Use-Case Nachricht senden
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Use-Case-Spezifikation
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="14" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="10cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Abschnitt
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Inhalt
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bezeichner
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
UC3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Name
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachricht senden
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Priorität
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Wichtigkeit für Systemerfolg: hoch
\begin_inset Newline newline
\end_inset

Technologisches Risiko: mittel
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kritikalität
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Hoch
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Beschreibung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer versendet eine Nachricht.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Auslösendes Ereignis
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Benutzer möchte eine Nachricht senden.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Akteure
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Benutzer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer ist im Gespräch angemeldet und besitzt eine gültiges Session-Ticket.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer kann erneut eine Nachricht versenden und Nachrichten anderer
 Gesprächsteilnehmer empfangen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ergebnis
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Die Empfänger haben die versendete Nachricht empfangen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Hauptszenario
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Der Benutzer erfasst die zu versenden Nachricht
\end_layout

\begin_layout Plain Layout
2.
 Der Benutzer wählt einen Kryptoalgorithmus
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Kryptoalgorithmus"
description "Ein Kryptoalgorithmus ist im Kontext von YAEM die konkrete Implementierung des Interfaces ICryptoProvider und bietet die Möglichkeit beliebige Nachrichten zu verschlüsseln beziehungsweise zu entschlüsseln."

\end_inset

 aus.
\end_layout

\begin_layout Plain Layout
3.
 Der Benutzer generiert einen Initalisierungsvektor
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Initialisierungsvektor"
description "Ein Initialisierungsvektor (kurz IV) bezeichnet in der Kryptografie ein Block von Zufallszahlen."

\end_inset

.
\end_layout

\begin_layout Plain Layout
4.
 Der Initialisierungsvektor wird an alle Empfänger gesendet.
\end_layout

\begin_layout Plain Layout
5.
 Der Benutzer wählt einen Schlüssel.
\end_layout

\begin_layout Plain Layout
6.
 Der Schlüssel wird an alle Empfänger gesendet.
\end_layout

\begin_layout Plain Layout
7.
 Der Benutzer verschickt die (verschlüsselte) Nachricht.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alternativszenarien
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2a.
 Der Benutzer wählt keinen Kryptoalgorithmus aus.
\end_layout

\begin_layout Plain Layout
2a1.
 Der Benutzer versendet die Nachricht unverschlüselt.
\end_layout

\begin_layout Plain Layout
3a.
 Der Benutzer hat bereits einen Intialisierungsvektor erstellt oder einen
 Initalisierungsvektor von einem anderen Teilnehmer des Gesprächs erhalten
 und generiert keinen neuen Initialisierungsvektor.
\end_layout

\begin_layout Plain Layout
4a.
 Der Benutzer hat bereits einen Schlüssel erstellt oder einen Schlüssel
 von einem anderen Teilnehmer des Gesprächs erhalten und wählt keinen neuen
 Schlüssel.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ausnahmeszenarien
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Auslösendes Ereignis: Der Benutzer kann keine Verbindung zum Server herstellen.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Use-Case-Spezifikation Nachricht senden
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Nachricht empfangen
\begin_inset CommandInset label
LatexCommand label
name "sub:Nachricht-empfangen"

\end_inset


\end_layout

\begin_layout Standard
Dieser Anwendungsfall wird nicht vom Benutzer ausgelöst, sondern vom System.
 Sobald eine Nachricht, die an den Benutzer gerichtet ist, eintrifft, wird
 der Anwendungsfall gestartet.
 Ist die Nachricht verschlüsselt, versucht das System mit vorhandenem Initialisi
erungsvektor und Schlüssel die Nachricht zu entschlüssel und dem Benutzer
 darzustellen.
 Ist die Nachricht unverschlüsselt, so wird diese dem Benutzer direkt angezeigt.
\end_layout

\begin_layout Subsubsection*
Use-Case
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ExportedDiagrams/UC4-NachrichtEmpfangen.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Use-Case Nachricht empfangen
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Use-Case-Spezifikation
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="14" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="10cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Abschnitt
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Inhalt
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bezeichner
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
UC4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Name
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachricht empfangen
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Priorität
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Wichtigkeit für Systemerfolg: hoch
\begin_inset Newline newline
\end_inset

Technologisches Risiko: mittel
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kritikalität
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Hoch
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Beschreibung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer empfängt eine Nachricht.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Auslösendes Ereignis
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ein anderer Teilnehmer des Gesprächs versendet eine Nachricht.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Akteure
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Benutzer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer ist im Gespräch angemeldet und besitzt eine gültiges Session-Ticket.
 Ein Teilnehmer des Gesprächs versendet eine Nachricht.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer kann Nachrichten versenden und Nachrichten anderer Gesprächsteilneh
mer empfangen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ergebnis
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Die Nachricht wird dem Benutzer angezeigt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Hauptszenario
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Der Benutzer empfängt die Nachricht und prüft ob diese verschlüsselt ist.
\end_layout

\begin_layout Plain Layout
2.
 Der Benutzer verwendet den Initialisierungsvektor und Schlüssel zum entschlüsse
ln der Nachricht.
\end_layout

\begin_layout Plain Layout
3.
 Die entschlüsselte Nachricht wird angezeigt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alternativszenarien
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1a.
 Ist die Nachricht nicht verschlüsselt, wird sie direkt angezeigt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ausnahmeszenarien
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ist kein Initalisierungsvektor, Schlüssel oder Implementierung des verwendeten
 Kryptoalgorithmus vorhanden, so wird der unlesbare Geheimtext
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Geheimtext"
description "Der Geheimtext ist der Text, der durch die Verschlüsselung mittels eines kryptografischen Verfahrens unlesbar gemachte wurde."

\end_inset

 angezeigt.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Use-Case-Spezifikation Nachricht empfangen
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Mockups
\end_layout

\begin_layout Standard
Mockups
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Mockup"
description "Ein Mockup in der Softwareentwicklung bezeichnet einen rudimentären Wegwerfprototypen der Benutzerschnittstelle einer zu erstellenden Software. Mock-ups werden insbesondere in frühen Entwicklungsphasen eingesetzt, um Anforderungen an die Benutzeroberfläche in Zusammenarbeit mit Auftraggeber und Anwendern besser ermitteln zu können. Es handelt sich meist um ein reines Grundgerüst der Bedienelemente ohne weitere Funktionalität."

\end_inset

 dienen zur Visualisierung der Benutzeroberfläche des zu entwickelnden Softwarep
rodukts und werden häufig bereits in der Anforderungsphase zusammen mit
 den Stakeholdern entwickelt.
 Sie liefern dem Softwareentwickler in der Implmentationsphase (siehe 
\begin_inset CommandInset ref
LatexCommand vref
reference "chap:Implementierung"

\end_inset

) ein Grundgerüst für die einzelnen Dialogfenster
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Dialog"
description "Als Dialog (oder Dialogfenster) bezeichnet man in der Softwareentwicklung eine grafische Benutzerschnittstelle zur Mensch-Maschine-Interaktion zwischen Computerprogramm und Benutzer."

\end_inset

.
 Je nach Kundenzielgruppe und Wichtigkeit der Mensch-Maschine-Schnittstelle
 wird mehr oder weniger Zeit in die Entwicklung der Mockups investiert.
 Häufig werden diese mit zusammen mit Psychologen entwickelt und enthalten
 sehr weniger Interpretationsspielraum für den Softwareentwickler.
\end_layout

\begin_layout Subsection
Dialog Gespräch beitreten
\end_layout

\begin_layout Standard
Startet der Benutzer die Applikation so wird ihm als erstes die Möglichkeit
 gegeben, einen Benutzernamen zu wählen, unter welchem er im Gespräch Nachrichte
n verschicken möchte.
 Dabei wird der Benutzername auf eine Länge von 255 Zeichen beschränkt und
 er darf keine Sonderzeichen enthalten.
 Nach einem Klick auf Connect werden diese Bedingungen geprüft und eine
 Verbindung zum Server hergestellt.
 Bei Erfolg wird der Dialog geschlossen und dem Benutzer der Gesprächsdialog
 (siehe 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Gesprächsdialog"

\end_inset

) angezeigt.
\end_layout

\begin_layout Subsubsection*
Mockup
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Mockups/Connect.png
	scale 65

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Mockup Dialog Gespräch beitreten
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Gesprächsdialog
\begin_inset CommandInset label
LatexCommand label
name "sub:Gesprächsdialog"

\end_inset


\end_layout

\begin_layout Standard
Ist der Benutzer einem Gespräch beigetreten so verwendet er den Gesprächsdialog
 zum Senden und Empfangen von Nachrichten.
 Das Gesprächsprotokoll zeigt einen zeitlich geordneten Ablauf aller gesendeten
 und empfangenen Nachrichten.
 Weiterhin werden Aktionen wie ein Initialisierungsvektoraustausch oder
 das Setzen des Schlüssels eines Verschlüsselungsalgorithmus angezeigt.
 Auf der rechten Seite werden alle dem Gespräch beigetretenen Benutzer angezeigt.
 
\end_layout

\begin_layout Standard
Über die Textbox unterhalb des Gesprächsprotokolls lassen sich Nachrichten
 erfassen, die Nachricht muss dabei mindestens ein Zeichen lang sein.
 in der Dropdownliste rechts neben der Textbox werden alle installierten
 Kryptoalgorithmen angezeigt, zusätzlich zur Voreinstellung 
\begin_inset Quotes eld
\end_inset

<None>
\begin_inset Quotes erd
\end_inset

, welche die Nachricht unverschlüsselt versendet.
 Ist kein Algorithmus angezeigt, so kann der Benutzer keine Auswahl treffen.
 Wählt der Benutzer einen Algorithmus aus, für welchen noch kein Initialisierung
svektor vorhanden ist, so wird eine Vektor generiert und den anderen Gesprächste
ilnehmern zugsendet.
 Gleichzeitig wählt der Benutzer einen Schlüssel aus.
 Beim klicken auf den 
\begin_inset Quotes eld
\end_inset

Send
\begin_inset Quotes erd
\end_inset

 Button, wird die Nachricht an die anderen Gesprächsteilnehmer versendet.
\end_layout

\begin_layout Standard
Beim Schliessen der Applikation verlässt der Benutzer das Gespräch und der
 Gesprächsdialog schliesst sich selbst.
\end_layout

\begin_layout Subsubsection*
Mockup
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Mockups/Messaging.png
	scale 65

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Mockup Gesprächsdialog
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Konzept
\begin_inset CommandInset label
LatexCommand label
name "chap:Konzept"

\end_inset


\end_layout

\begin_layout Standard
Die Konzeptphase
\begin_inset Foot
status open

\begin_layout Plain Layout
auch Designphase genannt
\end_layout

\end_inset

 des Wasserfallmodells behandelt die Entwicklung eines vollständigen und
 umfassenden Lösungskonzepts auf Basis der dokumentierten Anforderungen
 (nach 
\begin_inset CommandInset citation
LatexCommand cite
key "Oestereich2006"

\end_inset

).
 Als Grundlage für das Konzept wird in einem ersten Schritt die Toolchain
 erfasst, welche die weiteren (technologischen) Rahmenbedingungen für das
 Konzept vorgibt.
 Weiter wird zuerst das Konzept von der Bausteinsicht betrachtet, es wird
 von der Komponentenebene bis zur Klassenebene das System modelliert.
 Als weitere Sicht wird die Laufzeitsicht und die Verteilungssicht des Systems
 beleuchtet und spezifiziert.
\end_layout

\begin_layout Section
Toolchain
\end_layout

\begin_layout Standard
Der erste Schritt der Konzepterstellung ist das Erarbeiten und Evaluieren
 der Toolchain.
 Die Toolchain bestimmt mit welchen Frameworks und Entwicklungswerkzeugen
 der Entwickler später arbeiten wird und gibt einen groben technischen Rahmen
 vor, der bei der Konzepterstellung berücksichtigt werden muss.
\end_layout

\begin_layout Standard
Basis der verwendeten Tools und Frameworks wird Microsofts .NET Framework
 in der Version 4.0 sein.
 Dies primär aufgrund der Möglichkeiten von WCF
\begin_inset Foot
status open

\begin_layout Plain Layout
Eine umfangreiche Einführung in WCF ist in der MSDN unter 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://msdn.microsoft.com/en-us/library/ee958158.aspx
\end_layout

\end_inset

 erhältlich.
\end_layout

\end_inset

 zur Realisierung von Webservices und WPF bzw.
 Silverlight für Applikationen mit Oberflächen für die Windows Plattform.
 Als Entwicklungswerkzeug wird Microsoft Visual Studio 2010 eingesetzt und
 als Package Manager NuGet
\begin_inset Foot
status open

\begin_layout Plain Layout
Mehr zum Package Manager NuGet ist unter 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://nuget.codeplex.com/
\end_layout

\end_inset

 zu finden.
\end_layout

\end_inset

.
 Zur Dateiverwaltung der online Hosting-Dienst Github
\begin_inset Foot
status open

\begin_layout Plain Layout
Das Github Repository für YAEM ist unter 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

https://github.com/famstutz/YAEM
\end_layout

\end_inset

 öffentlich verfügbar.
\end_layout

\end_inset

 verwendet, welcher als Versionsverwaltungssystem Git
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Git"
description "Git ist eine freie Software zur verteilten Versionsverwaltung von Dateien, die ursprünglich für die Quellcode-Verwaltung des Kernels Linux entwickelt wurde."

\end_inset

 einsetzt.
\end_layout

\begin_layout Section
Bausteinsicht
\end_layout

\begin_layout Standard
Nach 
\begin_inset CommandInset citation
LatexCommand cite
key "Starke2011"

\end_inset

 und 
\begin_inset CommandInset citation
LatexCommand cite
key "Hruschka2012"

\end_inset

 lassen sich unter dem Begriff 
\begin_inset Quotes eld
\end_inset

Bausteine
\begin_inset Quotes erd
\end_inset

 sämtliche Software- oder Implementeirungskomponenten zusammenfassen.
 Sie stellen letztendliche Abstraktionen von Quellcode dar.
 Dazu gehören Klassen, Prozeduren, Programme, Pakete, Komponenten (nach
 der UML-Definition) oder Subsysteme.
\end_layout

\begin_layout Standard
Die Bausteinsicht bildet die Aufgaben des System auf Software-Bausteine
 oder -Komponenten ab.
 Diese Sicht macht Struktur und Zusammenhänge zwischen den Bausteinen der
 Architektur explizit.
 Bausteinsichten zeigen statische Aspekte von Systemen.
 In dieser Hinsicht entsprechen sie den konventionellen Implementierungsmodellen.
\end_layout

\begin_layout Subsection
Komponentendiagramm
\end_layout

\begin_layout Standard
Das Komponentendigramm stellt das System YAEM aus Vogelperspektive dar und
 ist die höchstabstrahierte Ansicht der Bausteinsicht.
 
\end_layout

\begin_layout Standard
Der ServiceHost stellt die Serverapplikation des Systems dar und implementiert
 die beiden Schnittstellen
\begin_inset Foot
status open

\begin_layout Plain Layout
In diesem Zusammenhang auch Service Contracts
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Service Contract"
description "Ein Service Contract bezeichnet eine Schnittstelle oder Klasse die zur Kommunikation für verteilte Systeme genutzt werden können."

\end_inset

 genannt
\end_layout

\end_inset

 
\emph on
IUserService
\emph default
 (siehe 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:IUserService"

\end_inset

) und 
\emph on
IMessagingService
\emph default
 (siehe 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:IMessagingService"

\end_inset

).
 Er stellt die Schnittstellen als Webservice den Clientapplikationen zur
 Verfügung.
 Die Clientapplikationen (die in einer Vielzahl von Frameworks implementiert
 sein können) benutzen diese Schnittstellen um mit der Serverapplikation
 zu kommunizieren.
 Die Clientapplikationen benutzen MEF
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Managed Extensibility Framework"
description "Das Managed Extensibility Framework (kurz MEF) ist ein Kompositionframework zum Erstellen einer Plugininfrasktruktur innerhalb einer Applikation. Es erhöht die Flexibilität, Erweiterbarkeit und Testbarkeit von grossen Applikationen."

\end_inset

 um dynamisch Kryptoalgorithmen (siehe 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Kryptoalgorithmen"

\end_inset

) zur Laufzeit laden zu können.
 Dadurch wird gewährleistet, dass der Server zu keinem Zeitpunkt die verschlüsse
lten Nachrichten, die über ihn versendet werden, im Klartext lesen kann.
\end_layout

\begin_layout Subsubsection*
Komponentendiagramm
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ExportedDiagrams/ComponentModel.png
	scale 65

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Komponentendiagramm
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Domänenmodell
\end_layout

\begin_layout Standard
Das Domänenmodell umfasst nur die Businessobjekte, die über die Serviceschnittst
elle vom Client
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Client"
description "Ein Client (oder Clientapplikation) ist eine Softwareanwendung die im Gegensatz zu einer Serverapplikation auf dem Rechner des Benutzers ausgeführt wird."

\end_inset

- an die Serverapplikation
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Server"
description "Ein Server (auch Serverapplikation) ist eine serverseitige Anwendung die auf einem zentralen Computer (Server) ausgeführt wird."

\end_inset

 beziehungsweise umgekehrt übertragen werden.
 
\end_layout

\begin_layout Standard
YAEM verwendet ein vergleichsweise simples Domänenmodell.
 Jeder Benutzer wird als 
\emph on
User
\emph default
objekt im Repository
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Repository"
description "Ein Repository ist ein Verzeichnis zur Speicherung einer von digitalen Objekten. In diesem Kontext ist ein Repository eine Datenbank zur Speicherung und zum Wiederfinden von Objekten."

\end_inset

 gespeichert.
 Bei erfolgreichem Gesprächsbeitritt erstellt der Server ein 
\emph on
Ticket
\emph default
objekt, welches an den Client zurückgegeben wird.
 Wird eine Nachricht versendet, so erstellt der Client ein 
\emph on
Message
\emph default
objekt, welches die Nachricht selbst als Bytearray in der Eigenschaft 
\emph on
Payload
\emph default
 speichert.
 Will der Benutzer eine verschlüsselte Nachricht versenden, so setzt er
 die Eigenschaft 
\emph on
Algorithm
\emph default
 des 
\emph on
Message
\emph default
objekts auf einen Wert des Enumerators 
\emph on
CryptoAlgorithm
\emph default
, der ungleich 
\emph on
None
\emph default
 ist.
 Wenn die Eigenschaft 
\emph on
Algorithm
\emph default
 gesetzt ist, so muss der Benutzer den 
\emph on
Payload
\emph default
 verschlüsselt in der 
\emph on
Message
\emph default
 ablegen.
\end_layout

\begin_layout Standard
Sämtliche Domänenobjekte leiten von 
\emph on
ObjectBase
\emph default
 ab.
 
\emph on
ObjectBase
\emph default
 enthält einen Schlüssel 
\emph on
Key
\emph default
 in Form einer Globally Unique Identifier
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Globally Unique Identifier"
description "Ein Globally Unique Identifier (auch GUID genannt) ist eine eindeutige, 128 Bit lange Zahl, die zur Identifzierung von Objekten in verteilten Systemen dienen."

\end_inset

 zur eindeutigen Identifizierung der Objekte in den Repositories.
 Weiterhin implementiert 
\emph on
ObjectBase
\emph default
 das Interface 
\emph on
INotifyPropertyChanged
\emph default

\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Die genaue Schnittstellenbeschreibung ist in der MSDN unter 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://msdn.microsoft.com/en-us/library/system.componentmodel.inotifypropertychanged.
aspx
\end_layout

\end_inset

 zu finden.
\end_layout

\end_inset

, welches in WPF
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "WPF"
description "Windows Presentation Foundation (kurz WPF) ist ein Grafik-Framework das zusammen mit dem .NET Framework mitgeliefert wird und zur Darstellung von UI-Elementen dient."

\end_inset

 und Silverlight
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Silverlight"
description "Silverlight ist eine Erweiterung für Webbrowser, welche die Ausführung von Rich Internet Applications erlaubt. Silverlight ist eine abgespeckte Version von WPF und wird für auch als Framework für Windows Phone 7 verwendet."

\end_inset

 dazu dient, UI-Elemente, die an Datenobjekte gebunden sind, über geänderte
 Eigenschaften zu informieren.
\end_layout

\begin_layout Subsubsection*
Klassendiagramm
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ExportedDiagrams/DomainModel.png
	scale 65

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Klassendiagramm Domänenmodell
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Service Contracts
\end_layout

\begin_layout Standard
Ein Service Contract ist das Ausstellen einer Schnittstelle zur Kommunikation
 verschiedener Applikationen innerhalb eines verteilten Systems.
 Häufig werden diese Contracts als Webservice
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Webservice"
description "Ein Webservice ist eine Softwareapplikation, auf den über eine URL eindeutig idenifiziert ist und Daten als XML-Artefakt zurückgibt. Er wird über internetbasierte Protokolle angesprochen."

\end_inset

 angeboten, da sie dadurch plattform- und frameworkunabhängig implementiert
 werden können.
 
\end_layout

\begin_layout Standard
Typischerweise umfasst ein Service Contract mehrere Operationen, deren Rückgabew
erte als XML-Fragmente an die konsumierende Applikation zurückgegeben werden.
 Ausserdem ist ein Service Contract per Definition grundsätzlich zustandslos,
 er behandelt mehrere Anfragen (auch desselben Auftraggebers) immer als
 unabhängige Transaktionen.
 Insbesondere werden Anfragen ohne Bezug zu früheren Anfragen behandelt
 und keine Sitzungsinformationen ausgetauscht.
\end_layout

\begin_layout Subsubsection*
IUserService
\begin_inset CommandInset label
LatexCommand label
name "sub:IUserService"

\end_inset


\end_layout

\begin_layout Standard
Das Interface 
\emph on
IUserService
\emph default
 stellt die Benutzerverwaltungsfunktionalitäten zur Verfügung.
 Der Konsument des Service Contracts übergibt beim anmelden an den Server
 ein 
\emph on
User
\emph default
objekt, über welches der Benutzer identifiziert werden kann.
 Wird der Benutzer erfolgreich angemeldet, wird ein 
\emph on
Session
\emph default
objekt an den Konsumenten zurückgegeben.
 Das Gegenstück zur Methode 
\emph on
Join
\emph default
 ist die Methode 
\emph on
Leave
\emph default
, die eine 
\emph on
Session
\emph default
 für ungültig erklärt.
\end_layout

\begin_layout Standard
Die Methoden 
\emph on
Subscribe
\emph default
 und 
\emph on
Unsubscribe
\emph default
 werden vor dem Aufruf von 
\emph on
Join
\emph default
 bzw.
 nach dem Aufruf von 
\emph on
Leave
\emph default
 aufgerufen und ermöglich es der Serverapplikation Callbacks
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Callback"
description "Ein Callback (zu deutsch Rückruffunktion) bezeichnet eine Funktion, der als Parameter eine andere Funktion übergeben wird, die unter gewissen Bedingungen aufgerufen wird."

\end_inset

 (siehe 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:IServiceCallback"

\end_inset

) an den Client zu versenden.
\end_layout

\begin_layout Paragraph*
Klassendiagramm
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ExportedDiagrams/Class-IUserService.png
	scale 65

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Klassendiagramm 
\emph on
IUserService
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
IMessagingService
\begin_inset CommandInset label
LatexCommand label
name "sub:IMessagingService"

\end_inset


\end_layout

\begin_layout Standard
Über die Schnittstelle 
\emph on
IMessagingService
\emph default
 werden Nachrichten in Form eines 
\emph on
Message
\emph default
objekts übertragen.
 Der Sender gibt beim Aufruf der Methode 
\emph on
Send
\emph default
 neben der 
\emph on
Message
\emph default
 auch noch seine 
\emph on
Session
\emph default
 mit, damit die Serverapplikation überprüfen kann, ob der Benutzer eine
 gültige, nicht abgelaufene 
\emph on
Session
\emph default
 besitzt.
 Die Methoden 
\emph on
NegotiateInitializationVector
\emph default
 und 
\emph on
NegotiateKey
\emph default
 dienen zur Übermittlung des Initialisierungsvektors bzw.
 Schlüssels für den jeweils mitgelieferten Kryptoalgorithmus vom Typ 
\emph on
CryptoAlgorithm
\emph default
.
\end_layout

\begin_layout Paragraph*
Klassendiagramm
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ExportedDiagrams/Class-IMessagingService.png
	scale 65

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Klassendiagramm 
\emph on
IMessagingService
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
IServiceCallback
\begin_inset CommandInset label
LatexCommand label
name "sub:IServiceCallback"

\end_inset


\end_layout

\begin_layout Standard
Damit über das HTTP
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "HTTP"
description "Das Hypertext Transfer Protocol (kurz HTTP) ist ein Protokoll zur Übertragung von Daten über ein Netzwerk. Es ist das meisteingesetzte Protokoll zur Übertragung von Webseiten im World Wide Web (WWW)."

\end_inset

 Callbacks (der Mechanismus wird detaillierter 
\noun on
[Referenz]
\noun default
 beschrieben) versendet werden können, müssen alle Clientapplikationen,
 die den Webservice der Serverapplikation verwenden, die Schnittstelle 
\emph on
IServiceCallback
\emph default
 implementieren.
 Die beiden Schnittstellen 
\emph on
IUserService
\emph default
 und 
\emph on
IMessagingService
\emph default
 werden mit 
\emph on
[ServiceContract(CallbackContract = typeof(IServiceCallback))] 
\emph default
annotiert
\begin_inset Foot
status open

\begin_layout Plain Layout
Details zum ServiceContractAttribute sind in der MSDN unter 
\begin_inset CommandInset href
LatexCommand href
target "http://msdn.microsoft.com/en-us/library/system.servicemodel.servicecontractattribute.aspx"

\end_inset

 zu finden.
\end_layout

\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Annotation"
description "Eine Annotation bezeichnet ein Sprachelement im Quelltext, das zur Einbindung von Metadaten im Quelltext dient."

\end_inset

 so dass beim Abbonnieren des Webservices der generierte Serviceclient gezwungen
 wird die Schnittstelle 
\emph on
IServiceCallback
\emph default
 zu implementierern.
\end_layout

\begin_layout Standard
Die Schnittstelle ist eine zusammengefasste Schnittstelle aller Callbackoperatio
nen der beiden Serviceschnittsellen 
\emph on
IUserService
\emph default
 und 
\emph on
IMessagingService
\emph default
, die in der Tabelle 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Methoden-von-IServiceCallback"

\end_inset

 beschrieben sind.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="8.5cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Methode
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Aufgabe
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
NotifyNegotiateIntializationVector
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Teilt dem Client mit, dass für einen bestimmten Kryptoalgorithmus ein neuer
 Intialisierungsvektor gesetzt wurde.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
NotifyNegotiateKey
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Teilt dem Client mit, dass für einen bestimmten Kryptoalgorithmus ein neuer
 Schlüssel gesetzt wurde.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
NotifyNewMessage
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Teilt dem Client mit, dass eine neue Nachricht an ihn gesendet wurde.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
NotifyUserJoined
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Teilt dem Client mit, dass ein neuer Benutzer dem Gespräch beigetreten ist.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
NotifyUserLeft
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Teilt dem Client mit, dass ein Benutzer das Gespräch verlassen hat.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Methoden von 
\emph on
IServiceCallback
\begin_inset CommandInset label
LatexCommand label
name "tab:Methoden-von-IServiceCallback"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph*
Klassendiagramm
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ExportedDiagrams/Class-IServiceCallback.png
	scale 65

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Klassendiagramm 
\emph on
IServiceCallback
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Kryptoalgorithmen
\begin_inset CommandInset label
LatexCommand label
name "sub:Kryptoalgorithmen"

\end_inset


\end_layout

\begin_layout Standard
Ein Ziel dieses Projekts war es, einzelne Kryptoalgorithmen als eigenständige
 Assemblies
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Assembly"
description "Übersetzter Quellcode als ausführbares Programm wird in .NET in sogeannten Assemblies zusammengefasst, ähnlich den Jar-Dateien in Java. Die Dateiendungen dieser Assemblies sind .exe oder .dll, zusätzlich zum ausführbaren Programmcode enhalten sie auch alle iM Manifest notwendigen Metadaten."

\end_inset

 zu implementieren und zur Laufzeit den Clientapplikationen anzuhängen.
 Aus diesem Grund müssen alle Kryptoalgorithmen gegen die Schnittstelle
 
\emph on
ICryptoProvider 
\emph default
implementiert werden.
 
\emph on
ICryptoProvider
\emph default
 liefert die grundlegenden Funktionalitäten zur Implementierung von symmetrische
n Kryptosystemen, bei welchen beide Teilnehmer den gleichen Schlüssel verwenden.
 Alle Nutzdaten (verschlüsselt oder unverschlüsselt) werden als Bytearrays
 (
\emph on
byte[]
\emph default
) übergeben, so dass sie einfach und ohne Zusatzaufwand über einen Webservice
 übergeben werden können.
 Jedes symmetrische Kryptosystem enthält einen Initalisierungsvektor, der
 einen Block von Zufallsdaten bezeichnet, sowie einen Schlüssel, der nur
 dem Sender und Empfänger bekannt ist.
 Aus diesem Grund enthält 
\emph on
ICryptoProvider
\emph default
 auch keine Methode 
\emph on
GetKey()
\emph default
, da der Schlüssel nicht öffentlich bekannt sein darf.
\end_layout

\begin_layout Standard
Die Methoden 
\emph on
Encrypt(string)
\emph default
 bzw.
 
\emph on
Decrypt(byte[])
\emph default
 verschlüsselt bzw.
 entschlüsseln übergebene Nutzdaten.
 Im nachfolgenden Klassendiagramm werden zusätzlich zur Schnittstelle 
\emph on
ICryptoProvider
\emph default
 auch noch die drei beispielhaften Implementierungen von symmetrischen Kryptosys
temen AES, Rijndael und TripleDES dargestellt.
 Jedes dieser Kryptosysteme wird in eine eigene Assembly kompiliert und
 zur Laufzeit der Clientapplikatikonen via MEF (siehe 
\noun on
[Referenz]
\noun default
) geladen.
\end_layout

\begin_layout Paragraph*
Klassendiagramm
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ExportedDiagrams/Class-Crypto.png
	scale 65

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Klassendiagramm Kryptoalgorithmen
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Server
\begin_inset CommandInset label
LatexCommand label
name "sub:Server"

\end_inset


\end_layout

\begin_layout Standard
Die Serverapplikation hosted die beiden Webservices IMessagingService (siehe
 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:IMessagingService"

\end_inset

) und IUserService (siehe 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:IUserService"

\end_inset

) in einem gemeinsamen Servicehost Services.
 Daraus ergibt sich eine Verwaltung der angemeldeten Benutzer und deren
 Sessions sowie das Aufrufen der passenden Callbacks bei Serviceoperationen.
 Dank des Bindings (siehe 
\noun on
[Referenz]
\noun default
) kann die Serverapplikation Delegates
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Delegate"
description "Ein Delegate (dt. Delegat) ist ein Methodenzeiger und wird verwendet um auf eine Methode einer Klasse oder eines Objekts zu verweisen. "

\end_inset

 der Callbackoperationen aller registrierten Clientapplikationen verwalten
 und dadurch z.B.
 beim Eintreffen einer neuen Nachricht die Callbackoperation 
\emph on
NotifyNewMessage
\emph default
 (siehe 
\emph on
IServiceCallback
\emph default
 
\begin_inset CommandInset ref
LatexCommand vref
reference "tab:Methoden-von-IServiceCallback"

\end_inset

) der registrierten Clients aufrufen.
\end_layout

\begin_layout Paragraph*
Klassendiagramm
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ExportedDiagrams/Class-Server.png
	scale 65

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Klassendiagramm Server
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Client
\end_layout

\begin_layout Standard
Für die Clientapplikationen wird kein Konzept erstellt, da diese über eine
 Service Reference
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Service Reference"
description "Über eine Service Reference erstellt das .NET Framework einen Clientproxy basierend auf einem Webservice und stellt die so verfügbaren Methoden in generiertem Quellcode der Applikation zur Verfügung."

\end_inset


\begin_inset Foot
status open

\begin_layout Plain Layout
In der MSDN finden sich unter 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://msdn.microsoft.com/en-us/library/bb907578.aspx
\end_layout

\end_inset

 mehr Informationen zu Service References.
\end_layout

\end_inset

 die Services der Serverapplikation (siehe 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Server"

\end_inset

) anziehen und zusätzlich noch das Interface IServiceCallback (siehe 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:IServiceCallback"

\end_inset

) implementieren müssen.
 Ansonsten ergibt sich die logische Struktur der Clientapplikation aus dem
 verwendeten GUI-Framework.
\end_layout

\begin_layout Section
Laufzeitsicht
\end_layout

\begin_layout Standard
Die Laufzeitsicht beschreibt, welche Bestandteile des Systems zur Laufzeit
 existieren und wie sie zusammenwirken (nach 
\begin_inset CommandInset citation
LatexCommand cite
key "Starke2011"

\end_inset

).
 Dabei kommen wichtige Aspekte dese Systembetriebs ins Spiel, die beispielsweise
 den Systemstart, die Laufzeitkonfiguration oder die Administration des
 Systems betreffen.
\end_layout

\begin_layout Standard
Darüber hinaus dokumentiert die Laufzeitsicht, wie Laufzietkomponenten sich
 aus Instanzen von Implementierungsbausteinen zusammensetzen.
 
\end_layout

\begin_layout Subsection
Gespräch beitreten
\end_layout

\begin_layout Standard
Möchte ein Benutzer einem Gespräch beitreten so gibt er über das ConnectWindow
 (siehe 
\noun on
[Referenz]
\noun default
) seinen gewünschten Benutzernamen ein.
 Der Loop UserName in use stellt dar, dass der Benutzer solange einen Benutzerna
men auswählen muss bis er einen Benutzernamen wählt, der noch nicht dem
 Gespräch beigetreten ist.
 Ist der Benutzername frei, so erstellt wird von der Serverapplikation in
 der SessionsStorage ein neues SessionTicket gelöst, das der Clientapplikation
 zurückgegeben wird.
 
\end_layout

\begin_layout Paragraph*
Sequenzdiagramm
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ExportedDiagrams/Sequence-GespraechBeitreten.png
	scale 65

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Sequenzdiagramm Gespräch beitreten
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Gespräch verlassen
\end_layout

\begin_layout Standard
Möchte der Benutzer das Gespräch verlassen so initiiert er über das MessagingWin
dow eine Anfrage an die Serverapplikation zum Verlassen des Gesprächs.
 In der SessionStorage wird dann das SessionTicket des Benutzers entfernt
 und der Clientapplikation wird mitgeteilt, dass der Benutzer erfolgreich
 das Gespräch verlassen hat und keine Nachrichten mehr senden oder empfangen
 kann.
\end_layout

\begin_layout Paragraph*
Sequenzdiagramm
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ExportedDiagrams/Sequence-GespraechVerlassen.png
	scale 65

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Sequenzdiagramm Gespräch verlassen
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Nachricht senden
\end_layout

\begin_layout Standard
Möchte der Benutzer eine Nachricht vesenden so muss er, falls noch kein
 Initalisierungsvektor für den gewählten Kryptoalgorithmus gesetzt ist,
 zuerst einen Initialisierungsvektor setzen.
 Dasselbe gilt für den Schlüssel des gewählten Kryptoalgorithmus, ist er
 innerhalb des gesamten Gesprächs noch nie gesetzt worden, so muss der Schlüssel
 vom Benutzer gewählt werden.
\end_layout

\begin_layout Standard
Sind die beiden Bedingungen (Initialisierungsvektor und Schlüssel gesetzt)
 erfüllt, wird die Nachricht an den Webservice weitergegeben und falls die
 gewählten Empfänger ein gültiges SessionTicket bestitzen und beim Webservice
 einen Delegaten als Callback hinterlegt haben wird ihnen die Nachricht
 übermittelt.
 Der Benutzer erhält anscheinend eine Bestätigung des Nachrichtenversandes.
\end_layout

\begin_layout Paragraph*
Sequenzdiagramm
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ExportedDiagrams/Sequence-NachrichtSenden.png
	scale 65

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Sequenzdiagramm Nachricht senden
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Verteilungssicht
\end_layout

\begin_layout Standard
Nach 
\begin_inset CommandInset citation
LatexCommand cite
key "Starke2011"

\end_inset

 beschreibt die Verteilungssicht die Ablaufumgebung des Systems in Form
 von Hardwarekomponenten (wie Prozessoren, Speicher, Netzwerk, Router und
 Firewalls) mit den beteiligten Protokollen.
 In der Infrastruktursicht können die Leistungsdaten und Parameter der beteiligt
en Elemente dargestellt werden.
 Ausserdem werden zusätzlich Betriebssysteme oder externe Systeme aufgenommen.
\end_layout

\begin_layout Standard
Die Verteilungssicht ist von grosser Beduetung für die Betreiber des Systems,
 die Hardwarearchitekten, das Entwicklungsteam sowie Management und Projektleitu
ng (gemäss 
\begin_inset CommandInset citation
LatexCommand cite
key "Hruschka2012"

\end_inset

).
\end_layout

\begin_layout Subsection
Verteilungsdiagramm
\end_layout

\begin_layout Standard
Die Verteilungssicht in dieser Dokumentation beinhaltet nur ein Verteilungsdiagr
amm das sehr rudimentär und ohne grosse Details aufgezeichnet wird.
 Dies, da kein konkretes Verteilungsszenario der Applikation innerhalb des
 Projekts geplant wurde.
 Das Projekt beeinhaltet die Erarbeitung des Konzepts sowie die konkrete
 Implementierung der Applikation ohne jedoch konkrete Hardware bzw.
 vorzugeben auf welchen die einzelnen Applikationen laufen sollen.
 
\end_layout

\begin_layout Standard
Generell können die einzelnen Clientapplikationen auf jeglicher Hardware
 laufen, benötigen jedoch jeweils das passende Betriebssystem bzw.
 im Fall des Silverlight-Clients einen Browser mit Silverlight Plugin.
 Zwischen den Clientapplikationen und der Serverapplikation in Form des
 Servicehosts wird eine Netzwerkverbindung vorausgesetzt bei welcher die
 passenden Ports (siehe Binding 
\noun on
[Referenz]
\noun default
) geöffnet und zugänglich sind.
 Auch ist eine Verteilung über das WWW denkbar.
\end_layout

\begin_layout Paragraph*
Verteilungsdiagramm
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ExportedDiagrams/Deployment-Verteilungsdiagramm.png
	scale 65

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Verteilungsdiagramm
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Implementierung
\begin_inset CommandInset label
LatexCommand label
name "chap:Implementierung"

\end_inset


\end_layout

\begin_layout Standard

\noun on
[Kapiteleinführung]
\end_layout

\begin_layout Section
Implementierungsmethodik
\end_layout

\begin_layout Standard

\noun on
[Wahl der Implementierungsmethodik TDD erklären, Vorteile von TDD, Verweis
 auf Unittests]
\end_layout

\begin_layout Subsection
Testgetriebene Entwicklung
\end_layout

\begin_layout Standard
Test Driven Development (kurz TDD, deutsch Testgetriebene Entwicklung) ist
 eine evolutionäre Entwicklungsmethode, die häufig zusammen mit agilen Methoden
 Anwendung findet.
 Dabei werden Tests entsprechend den Anforderungen an eine Funktion erstellt
 und erst im Nachhinein der funktionale Code implementiert (gemäss 
\begin_inset CommandInset citation
LatexCommand cite
key "Bullinger2010"

\end_inset

).
\end_layout

\begin_layout Standard
Die Tests werden meist innerhalb eines Unit-Test-Frameworks (siehe 
\begin_inset CommandInset ref
LatexCommand vref
reference "sec:Unit-Tests"

\end_inset

) implementiert und laufen gelassen.
 Zu Beginn werden die Tests fehlschlagen, da noch gar kein Code implementiert
 worden ist.
 Ziel des Entwicklers ist es, den Code so lange zu verbessern, bis alle
 zugehörigen Tests bestanden werden.
\end_layout

\begin_layout Standard
Kommen neue Anforderungen oder Funktionen hinzu, werden zuerst neue Tests
 implementiert und danach der Code erweitert.
 Danach werden alle Test erneut durchgeführt, solange bis wieder alle Tests
 bestanden werden.
 
\end_layout

\begin_layout Standard
Zusammengefasst folgt man drei einfachen Schritten bei der Anwendung von
 TDD (frei nach 
\begin_inset CommandInset citation
LatexCommand cite
key "Fowler2012"

\end_inset

, siehe auch 
\begin_inset CommandInset ref
LatexCommand vref
reference "fig:Schritte-in-TDD"

\end_inset

):
\end_layout

\begin_layout Enumerate
Einen Test schreiben für das nächste Stück von Funktionalität, das der Applikati
on hinzugefügt werden soll
\end_layout

\begin_layout Enumerate
Funktionalen Code schreiben bis der Test erfüllt wird
\end_layout

\begin_layout Enumerate
Neuen und alten Code umgestalten um ihn besser zu strukturieren
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Graphics/tddSteps.jpg
	scale 50

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Schritte in TDD (aus 
\begin_inset CommandInset citation
LatexCommand cite
key "Ambler2011"

\end_inset

)
\begin_inset CommandInset label
LatexCommand label
name "fig:Schritte-in-TDD"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Durch die Anwendung von TDD wird der bestehende und neue Code fortlaufend
 optimiert und ist leicht zu ändern.
 Die enthaltenen Funktionen werden durch die Tests zugleich dokumentiert
 und Fehler werden früher entdeckt und sind durch Mini-Iterationen leichter
 lokalisierbar.
 Besonders in grossen Teams entsteht ein Qualitätsbewusstsein über das ganze
 Projekt hinweg, nicht nur bei einer kleinen Expertengruppe.
\end_layout

\begin_layout Standard
Nachteilig ist anzumerken, dass konsequent sämtlicher Code testdriven erstellt
 werden muss.
 Für Entwickler, die noch nie mit TDD in Berührung gekommen sind, ist es
 schwierig sich vorzustellen, wie etwas getestet werden soll, das noch nicht
 existiert.
 Generell funktioniert TDD auch nur, wenn alle Entwickler ein fundiertes
 Wissen über Testmethodiken besitzen.
 Man muss sich auch bewusst sein, dass TDD keine weiteren Tests wie Integrations
- oder Akzeptanztests ersetzt.
\end_layout

\begin_layout Section
Verwendete Technologien
\end_layout

\begin_layout Standard

\noun on
[Dieses Kapitel gibt einen Überblick über verschiedene Technologien und
 Techniken, soll zur Erklärung von Besonderheiten der Architektur dienen]
\end_layout

\begin_layout Subsection
MEF
\end_layout

\begin_layout Standard

\noun on
[MEF erläutern, Technologien dahinter (Reflection und Annotations), Vorteile
 und Nachteile]
\end_layout

\begin_layout Subsection
WCF
\end_layout

\begin_layout Standard

\noun on
[WCF erklären, wofür braucht man WCF']
\end_layout

\begin_layout Subsubsection
Bindings
\end_layout

\begin_layout Standard

\noun on
[Verschiedene Bindings auflisten und vergleichen, Details zu WsHttpDualBinding
 auflisten, Vorteile und Nachteile]
\end_layout

\begin_layout Subsubsection
Callbacks über NetHttpDualBinding
\end_layout

\begin_layout Standard

\noun on
[Delegates erklären, Mechanismsu von Callbacks über WsHttpDualBinding erklären]
\end_layout

\begin_layout Subsection
WPF
\end_layout

\begin_layout Standard

\noun on
[Vorteile von WPF gegenüber WinForms, Evt.
 ein paar einfache Anwendungsbeispiele]
\end_layout

\begin_layout Subsubsection
Silverlight
\end_layout

\begin_layout Standard

\noun on
[Silverlight als Subset von WPF, das im Browser läuft]
\end_layout

\begin_layout Subsection
NuGet
\end_layout

\begin_layout Standard

\noun on
[NuGet als Package Manager erklären.
 Wieso Package Manager? Vorteile/Nachteile]
\end_layout

\begin_layout Section
Kryptosysteme
\end_layout

\begin_layout Standard

\noun on
[AES, TripleDES und Rijndael erklären, symmetrische/asymmetrische Kryptosysteme
 erklären, erklären wieso im Moment nur symmetrische Kryptosysteme unterstützt
 werden, erklären, wie man asymmetrische Kryptosysteme unterstützen würde
 (welche Änderungen an ICryptoProvider wären nötig)]
\end_layout

\begin_layout Section
Aufgetretene Probleme
\end_layout

\begin_layout Standard

\noun on
[WsHttpDualBinding und Silverlight funktioniert nicht -> kein Silverlight
 Client implementiert]
\end_layout

\begin_layout Chapter
Test
\begin_inset CommandInset label
LatexCommand label
name "chap:Test"

\end_inset


\end_layout

\begin_layout Standard

\noun on
[Kapiteleinführung]
\end_layout

\begin_layout Section
Unit-Tests
\begin_inset CommandInset label
LatexCommand label
name "sec:Unit-Tests"

\end_inset


\end_layout

\begin_layout Standard

\noun on
[Was sind automatisierte Unittests? Vorteile aufzeigen.
 Verbindung mit TDD aufzeigen.
 MSTEST einführen]
\end_layout

\begin_layout Section
Akzeptanztests
\end_layout

\begin_layout Standard

\noun on
[Was sind Akzeptanztests? Ausformulieren aufgrund der Anforderungen, Übersetzung
 in Code]
\end_layout

\begin_layout Chapter
Fazit
\end_layout

\begin_layout Standard

\noun on
[Auführliches Fazit erstellen, Probleme bei der Implemntierung aufzeigen,
 Zukunft von YAEM?]
\end_layout

\begin_layout Section
Aufwand SOLL/IST Vergleich
\end_layout

\begin_layout Standard

\noun on
[Tabelle SOLL/IST Aufwand pro Phase, aufzeigen wo viel mehr Zeit als geplant
 verwendet wurde]
\end_layout

\begin_layout Section
Schlussfolgerungen
\end_layout

\begin_layout Standard

\noun on
[Zu viel Zeit für Silverlight/HttpDualBinding verwendet, generell viel mehr
 als 120h aufgewendet, Herzblut in Seminararbeit gesteckt]
\end_layout

\begin_layout Chapter
\start_of_appendix
Anhang
\end_layout

\begin_layout Section*
Akronyme
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
GUI Graphical User Interface
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
HTTP Hypertext Transfer Protocol
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
MEF Managed Extensibility Framework
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
MSDN Microsoft Developer Network
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
RUP Rational Unified Process
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
SL Silverlight
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
TDD Test Driven Development
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
UC Use Case
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
UI User Interface
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
WCF Windows Communication Foundation
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
WPF Windows Presentation Foundation
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
WWW World Wide Web
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
YAEM Yet Another Encrypted Messenger
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
ZHAW Zürcher Hochschule für Angewandte Wissenschaften
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
XML Extensible Markup Language
\end_layout

\begin_layout Standard
\begin_inset CommandInset nomencl_print
LatexCommand printnomenclature
set_width "auto"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "YAEM"
options "plainnat"

\end_inset


\end_layout

\end_body
\end_document
